<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cv.kdata.dao.EntBasicInfoMapper">
  <resultMap id="BaseResultMap" type="com.cv.kdata.model.EntBasicInfo">
    <result column="ent_id" jdbcType="VARCHAR" property="entId" />
    <result column="ent_name" jdbcType="VARCHAR" property="entName" />
    <result column="econ_kind" jdbcType="VARCHAR" property="econKind" />
    <result column="reg_capital" jdbcType="VARCHAR" property="regCapital" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="opt_time_start" jdbcType="VARCHAR" property="optTimeStart" />
    <result column="opt_time_end" jdbcType="VARCHAR" property="optTimeEnd" />
    <result column="reg_auth" jdbcType="VARCHAR" property="regAuth" />
    <result column="check_date" jdbcType="VARCHAR" property="checkDate" />
    <result column="start_date" jdbcType="VARCHAR" property="startDate" />
    <result column="end_date" jdbcType="VARCHAR" property="endDate" />
    <result column="biz_stat" jdbcType="VARCHAR" property="bizStat" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="credit_code" jdbcType="VARCHAR" property="creditCode" />
    <result column="reg_code" jdbcType="VARCHAR" property="regCode" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="p_domain" jdbcType="VARCHAR" property="pDomain" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cv.kdata.model.EntBasicInfoWithBLOBs">
    <result column="biz_area" jdbcType="LONGVARCHAR" property="bizArea" />
    <result column="legal_person" jdbcType="LONGVARCHAR" property="legalPerson" />
    <result column="reg_addr" jdbcType="LONGVARCHAR" property="regAddr" />
    <result column="oper_addr" jdbcType="LONGVARCHAR" property="operAddr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ent_id, ent_name, econ_kind, reg_capital, unit, opt_time_start, opt_time_end, reg_auth, 
    check_date, start_date, end_date, biz_stat, org_code, credit_code, reg_code, province, 
    city, tel, email, p_domain
  </sql>
  <sql id="Blob_Column_List">
    biz_area, legal_person, reg_addr, oper_addr
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cv.kdata.model.EntBasicInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ent_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cv.kdata.model.EntBasicInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ent_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cv.kdata.model.EntBasicInfoExample">
    delete from ent_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cv.kdata.model.EntBasicInfoWithBLOBs">
    insert into ent_basic_info (ent_id, ent_name, econ_kind, 
      reg_capital, unit, opt_time_start, 
      opt_time_end, reg_auth, check_date, 
      start_date, end_date, biz_stat, 
      org_code, credit_code, reg_code, 
      province, city, tel, 
      email, p_domain, biz_area, 
      legal_person, reg_addr, oper_addr
      )
    values (#{entId,jdbcType=VARCHAR}, #{entName,jdbcType=VARCHAR}, #{econKind,jdbcType=VARCHAR}, 
      #{regCapital,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{optTimeStart,jdbcType=VARCHAR}, 
      #{optTimeEnd,jdbcType=VARCHAR}, #{regAuth,jdbcType=VARCHAR}, #{checkDate,jdbcType=VARCHAR}, 
      #{startDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR}, #{bizStat,jdbcType=VARCHAR}, 
      #{orgCode,jdbcType=VARCHAR}, #{creditCode,jdbcType=VARCHAR}, #{regCode,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{pDomain,jdbcType=VARCHAR}, #{bizArea,jdbcType=LONGVARCHAR}, 
      #{legalPerson,jdbcType=LONGVARCHAR}, #{regAddr,jdbcType=LONGVARCHAR}, #{operAddr,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cv.kdata.model.EntBasicInfoWithBLOBs">
    insert into ent_basic_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="entId != null">
        ent_id,
      </if>
      <if test="entName != null">
        ent_name,
      </if>
      <if test="econKind != null">
        econ_kind,
      </if>
      <if test="regCapital != null">
        reg_capital,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="optTimeStart != null">
        opt_time_start,
      </if>
      <if test="optTimeEnd != null">
        opt_time_end,
      </if>
      <if test="regAuth != null">
        reg_auth,
      </if>
      <if test="checkDate != null">
        check_date,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="bizStat != null">
        biz_stat,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="creditCode != null">
        credit_code,
      </if>
      <if test="regCode != null">
        reg_code,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="pDomain != null">
        p_domain,
      </if>
      <if test="bizArea != null">
        biz_area,
      </if>
      <if test="legalPerson != null">
        legal_person,
      </if>
      <if test="regAddr != null">
        reg_addr,
      </if>
      <if test="operAddr != null">
        oper_addr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="entId != null">
        #{entId,jdbcType=VARCHAR},
      </if>
      <if test="entName != null">
        #{entName,jdbcType=VARCHAR},
      </if>
      <if test="econKind != null">
        #{econKind,jdbcType=VARCHAR},
      </if>
      <if test="regCapital != null">
        #{regCapital,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="optTimeStart != null">
        #{optTimeStart,jdbcType=VARCHAR},
      </if>
      <if test="optTimeEnd != null">
        #{optTimeEnd,jdbcType=VARCHAR},
      </if>
      <if test="regAuth != null">
        #{regAuth,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null">
        #{checkDate,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="bizStat != null">
        #{bizStat,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="creditCode != null">
        #{creditCode,jdbcType=VARCHAR},
      </if>
      <if test="regCode != null">
        #{regCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pDomain != null">
        #{pDomain,jdbcType=VARCHAR},
      </if>
      <if test="bizArea != null">
        #{bizArea,jdbcType=LONGVARCHAR},
      </if>
      <if test="legalPerson != null">
        #{legalPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="regAddr != null">
        #{regAddr,jdbcType=LONGVARCHAR},
      </if>
      <if test="operAddr != null">
        #{operAddr,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cv.kdata.model.EntBasicInfoExample" resultType="java.lang.Integer">
    select count(*) from ent_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ent_basic_info
    <set>
      <if test="record.entId != null">
        ent_id = #{record.entId,jdbcType=VARCHAR},
      </if>
      <if test="record.entName != null">
        ent_name = #{record.entName,jdbcType=VARCHAR},
      </if>
      <if test="record.econKind != null">
        econ_kind = #{record.econKind,jdbcType=VARCHAR},
      </if>
      <if test="record.regCapital != null">
        reg_capital = #{record.regCapital,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.optTimeStart != null">
        opt_time_start = #{record.optTimeStart,jdbcType=VARCHAR},
      </if>
      <if test="record.optTimeEnd != null">
        opt_time_end = #{record.optTimeEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.regAuth != null">
        reg_auth = #{record.regAuth,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null">
        check_date = #{record.checkDate,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.bizStat != null">
        biz_stat = #{record.bizStat,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.creditCode != null">
        credit_code = #{record.creditCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regCode != null">
        reg_code = #{record.regCode,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.pDomain != null">
        p_domain = #{record.pDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.bizArea != null">
        biz_area = #{record.bizArea,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.legalPerson != null">
        legal_person = #{record.legalPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.regAddr != null">
        reg_addr = #{record.regAddr,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.operAddr != null">
        oper_addr = #{record.operAddr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ent_basic_info
    set ent_id = #{record.entId,jdbcType=VARCHAR},
      ent_name = #{record.entName,jdbcType=VARCHAR},
      econ_kind = #{record.econKind,jdbcType=VARCHAR},
      reg_capital = #{record.regCapital,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      opt_time_start = #{record.optTimeStart,jdbcType=VARCHAR},
      opt_time_end = #{record.optTimeEnd,jdbcType=VARCHAR},
      reg_auth = #{record.regAuth,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      biz_stat = #{record.bizStat,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      credit_code = #{record.creditCode,jdbcType=VARCHAR},
      reg_code = #{record.regCode,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      p_domain = #{record.pDomain,jdbcType=VARCHAR},
      biz_area = #{record.bizArea,jdbcType=LONGVARCHAR},
      legal_person = #{record.legalPerson,jdbcType=LONGVARCHAR},
      reg_addr = #{record.regAddr,jdbcType=LONGVARCHAR},
      oper_addr = #{record.operAddr,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ent_basic_info
    set ent_id = #{record.entId,jdbcType=VARCHAR},
      ent_name = #{record.entName,jdbcType=VARCHAR},
      econ_kind = #{record.econKind,jdbcType=VARCHAR},
      reg_capital = #{record.regCapital,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      opt_time_start = #{record.optTimeStart,jdbcType=VARCHAR},
      opt_time_end = #{record.optTimeEnd,jdbcType=VARCHAR},
      reg_auth = #{record.regAuth,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      biz_stat = #{record.bizStat,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      credit_code = #{record.creditCode,jdbcType=VARCHAR},
      reg_code = #{record.regCode,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      p_domain = #{record.pDomain,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
   <select id="selectByName" resultMap="BaseResultMap">
    select ent_id, ent_name from ent_basic_info where ent_name = #{entName}
  </select>
  
  <select id="selectByNameList" resultMap="BaseResultMap">
    select ent_id, ent_name from ent_basic_info 
    <if test="entList != null">
       where ent_name in 
       <foreach collection="entList" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
    </if> 
    limit 50
  </select>
  
   <select id="selectByUidList" resultMap="BaseResultMap">
    select ent_id, ent_name from ent_basic_info 
    <if test="entList != null">
       where ent_id in 
       <foreach collection="entList" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
    </if> 
    limit 50
  </select>
  
  <select id="selectLikeName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select ent_id, ent_name from ent_basic_info where ent_name like concat('%',#{entName},'%') limit 50
  </select>
</mapper>